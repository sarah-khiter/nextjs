import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import React, { useState, useEffect, useMemo } from "react"
import { GoogleMap, useLoadScript, Marker } from "@react-google-maps/api"
import OPTIONS from '@/utils/options'
import MAPCONTAINERSTYLES from '@/utils/mapstyle'
import COORDONNEES_REGION from '@/utils/villes'
import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const { isLoaded } = useLoadScript({
    googleMapsApiKey: "AIzaSyDbr6FgqPsctO5kXmIFoYL7X7TuaXAGX_o",
})
if (!isLoaded) return <div>Loading...</div>
return <Map />

}
function Map(){
  const [donnees, setDonnees] = useState<any>([])
  const xx = async()=>{
    let tab:any = []
      try{
       
        const requests = COORDONNEES_REGION.map(async element => {
          const response = await axios.get(
              `https://api.openweathermap.org/data/2.5/weather?q=${element.ville}&units=metric&lang=fr&appid=dcea80cba359684c8af702c1b42982ba`,
          )
          //setDonnees([...donnees, {lat:element.lat, lng:element.lng, temps:response.data.weather[0].icon, degres:Math.floor(response.data.main.temp)}])
          tab.push({lat:element.lat, lng:element.lng, temps:response.data.weather[0].icon, degres:Math.floor(response.data.main.temp)})
          //console.log({lat:element.lat, lng:element.lng, temps:response.data.weather[0].icon, degres:Math.floor(response.data.main.temp)}, "RESPONSE")
      }) 
      }
      catch(err){
        console.log(err)
      }
      setDonnees(tab)
  }

  useEffect(()=>{
    xx()
  }, [])

  useEffect(()=>{
    console.log(donnees, "DOOONNNEEES")
  }, [donnees])

  return(
    <div>
    <Head>
      <title>Create Next App</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <main className={`${styles.main} ${inter.className}`}>
    <GoogleMap zoom={6} center={{lat:46.6167, lng:1.85}} mapContainerStyle={MAPCONTAINERSTYLES} options={OPTIONS}>
           {donnees ? donnees.map((v:any, k:any)=>(
            <Marker 
              key={k} position={{lat:v.lat, lng:v.lng}}
              icon={{url: `https://openweathermap.org/img/wn/${v.temps}@2x.png`,
              scaledSize: window.innerWidth > 780 ? new window.google.maps.Size(60, 60) : new window.google.maps.Size(40, 40),
              anchor: window.innerWidth > 780 ? new window.google.maps.Point(30, 30) : new window.google.maps.Point(20, 20),
        }}
        label={{
            text: `${v.degres}Â°`,
            fontWeight: '500',
            className: styles.marker__label
        }}
        />
           ))
            :""}
        </GoogleMap>
      </main>
      </div>
  )
}
